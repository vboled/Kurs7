(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    202174,       3824]
NotebookOptionsPosition[    200530,       3789]
NotebookOutlinePosition[    201005,       3807]
CellTagsIndexPosition[    200962,       3804]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "REc", " ", "\:043d\:0430", " ", 
     "\:043e\:0442\:0440\:0435\:0437\:043a\:0435", " ", "\:043e\:0442", " ", 
     "i"}], "-", 
    RowBox[{"1", " ", "\:0434\:043e", " ", "i"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Fi", "[", "x_", "]"}], ":=", 
     FractionBox[
      RowBox[{"x", "-", "r1i"}], 
      RowBox[{"ri", "-", "r1i"}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"polsRR", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lambda", " ", "+", " ", 
             RowBox[{"2", " ", "mu"}]}], ")"}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"Fi", "[", "r", "]"}], ",", "r"}], "]"}], "r"}], " ", 
          "+", 
          RowBox[{"lambda", " ", 
           RowBox[{"Fi", "[", "r", "]"}]}]}], ")"}]}], " ", "+", " ", 
       RowBox[{"polsFF", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"lambda", " ", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"Fi", "[", "r", "]"}], ",", "r"}], "]"}], "r"}], " ", 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lambda", " ", "+", " ", 
             RowBox[{"2", " ", "mu"}]}], ")"}], " ", 
           RowBox[{"Fi", "[", "r", "]"}]}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "r1i", ",", "ri"}], "}"}]}], "]"}], "//", 
    "FullSimplify"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Fi", "[", "x_", "]"}], ":=", 
     FractionBox[
      RowBox[{"x", "-", "ri1"}], 
      RowBox[{"ri", "-", "ri1"}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"PolsRR", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lambda", " ", "+", " ", 
             RowBox[{"2", " ", "mu"}]}], ")"}], "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"Fi", "[", "r", "]"}], ",", "r"}], "]"}], "r"}], " ", 
          "+", 
          RowBox[{"lambda", " ", 
           RowBox[{"Fi", "[", "r", "]"}]}]}], ")"}]}], " ", "+", " ", 
       RowBox[{"PolsFF", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"lambda", "*", 
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{"Fi", "[", "r", "]"}], ",", "r"}], "]"}], "r"}], " ", 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lambda", " ", "+", " ", 
             RowBox[{"2", " ", "mu"}]}], ")"}], 
           RowBox[{"Fi", "[", "r", "]"}]}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "ri", ",", "ri1"}], "}"}]}], "]"}], "//", 
    "FullSimplify"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8557190220359707`*^9, 3.855719032215565*^9}, {
   3.855719128866089*^9, 3.8557191348730893`*^9}, {3.8566220925790515`*^9, 
   3.856622098970091*^9}, {3.856623034075588*^9, 3.856623084094659*^9}, {
   3.8566231692674136`*^9, 3.8566231779034147`*^9}, {3.856623300141446*^9, 
   3.856623342540962*^9}, {3.8567605409523325`*^9, 3.8567605576101475`*^9}, {
   3.8567609392158213`*^9, 3.8567610305643463`*^9}, {3.8567611189194117`*^9, 
   3.856761132078412*^9}, {3.856761374207184*^9, 3.856761410208155*^9}, {
   3.8567614907298284`*^9, 3.8567615068819885`*^9}, {3.8567615480891376`*^9, 
   3.856761604073808*^9}, {3.8567616715108495`*^9, 3.8567616728277054`*^9}, {
   3.8567617031267853`*^9, 3.8567617197523775`*^9}, {3.8567617591639175`*^9, 
   3.856761760962651*^9}, {3.8567618177997603`*^9, 3.85676185885608*^9}, {
   3.8567618930398664`*^9, 3.85676193077641*^9}, {3.8567619949444094`*^9, 
   3.856762029609446*^9}, {3.8567623402059402`*^9, 3.8567623437829385`*^9}, {
   3.8567624604636283`*^9, 3.85676246164863*^9}, 3.856762739260434*^9, {
   3.856762782321497*^9, 3.856762784757304*^9}, {3.856762893164751*^9, 
   3.856762906496751*^9}, {3.856763559138159*^9, 3.856763564024159*^9}, {
   3.8567636347203307`*^9, 3.856763641999332*^9}, {3.856764392974827*^9, 
   3.8567644404249864`*^9}, {3.8567646510007486`*^9, 3.856764652985748*^9}, {
   3.8569711635959105`*^9, 3.856971253097576*^9}, {3.8569720087009478`*^9, 
   3.8569720440249424`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4d0f280f-57ba-44e2-ab50-dd33da4ee6bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mu", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "polsFF"}], "+", "polsRR"}], ")"}], " ", "r1i"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"lambda", "+", "mu"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"polsFF", "+", "polsRR"}], ")"}], " ", "ri"}]}]], "Output",
 CellChangeTimes->{3.856972044961944*^9, 3.8570524022930284`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"c8dc5ce5-a27c-4e91-8e15-a9a19da48346"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"lambda", "+", "mu"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"PolsFF", "+", "PolsRR"}], ")"}], " ", "ri"}], ")"}]}], "+", 
  RowBox[{"mu", " ", 
   RowBox[{"(", 
    RowBox[{"PolsFF", "-", "PolsRR"}], ")"}], " ", "ri1"}]}]], "Output",
 CellChangeTimes->{3.856972044961944*^9, 3.8570524023250275`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"2845b5a0-dab5-4b8f-9dad-ca84d3d4ceac"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numSolution", "=", 
     RowBox[{"ReadList", "[", 
      RowBox[{"\"\<pols.txt\>\"", ",", " ", 
       RowBox[{"{", 
        RowBox[{"Number", ",", " ", "Number"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"settings", " ", "=", " ", 
     RowBox[{"ReadList", "[", 
      RowBox[{"\"\<polsSettings.txt\>\"", ",", "Number"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h", " ", "=", 
     RowBox[{"settings", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", 
    RowBox[{"a", " ", "=", 
     RowBox[{"settings", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";", 
    RowBox[{"b", " ", "=", 
     RowBox[{"settings", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pa", " ", "=", 
     RowBox[{"settings", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Pb", "=", 
     RowBox[{"settings", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e", "=", 
     RowBox[{"settings", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nu", "=", 
     RowBox[{"settings", "[", 
      RowBox[{"[", "7", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T", " ", "=", " ", 
     RowBox[{"settings", "[", 
      RowBox[{"[", "8", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M", "=", 
     RowBox[{"settings", "[", 
      RowBox[{"[", "9", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", " ", "=", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p", "=", "Pa"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"r1", "=", "a"}], ";", 
    RowBox[{"r2", "=", "b"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exactSigmaRR", "[", "r_", "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"p", " ", 
       SuperscriptBox["r1", 
        RowBox[{"2", "/", "n"}]]}], 
      RowBox[{
       SuperscriptBox["r2", 
        RowBox[{"2", "/", "n"}]], "-", 
       SuperscriptBox["r1", 
        RowBox[{"2", "/", "n"}]]}]], 
     RowBox[{"(", 
      RowBox[{"1", "-", " ", 
       FractionBox[
        SuperscriptBox["r2", 
         RowBox[{"2", "/", "n"}]], 
        SuperscriptBox["r", 
         RowBox[{"2", "/", "n"}]]]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigmaRRPlot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"exactSigmaRR", "[", "r", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "a", ",", "b"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"exactSigmaFF", "[", "r_", "]"}], ":=", 
    RowBox[{
     FractionBox[
      RowBox[{"p", " ", 
       SuperscriptBox["r1", 
        RowBox[{"2", "/", "n"}]]}], 
      RowBox[{
       SuperscriptBox["r2", 
        RowBox[{"2", "/", "n"}]], "-", 
       SuperscriptBox["r1", 
        RowBox[{"2", "/", "n"}]]}]], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{"2", "-", "n"}], "n"], " ", 
        FractionBox[
         SuperscriptBox["r2", 
          RowBox[{"2", "/", "n"}]], 
         SuperscriptBox["r", 
          RowBox[{"2", "/", "n"}]]]}]}], ")"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigmaFFPlot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"exactSigmaFF", "[", "r", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "a", ",", "b"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Red", "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(\[Sigma]\), \(c\)], \(\
\[Phi]\[Phi]\)]\)\>\"", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigmaRRPlot", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"exactSigmaRR", "[", "r", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "a", ",", "b"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Red", "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(\[Sigma]\), \(c\)], \
\(rr\)]\)\>\"", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"exactSigmaFFUpr", "[", "h_", "]"}], ":=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Pa", "  ", 
         SuperscriptBox["a", "2"]}], "-", 
        RowBox[{"Pb", "  ", 
         SuperscriptBox["b", "2"]}]}], 
       RowBox[{
        SuperscriptBox["b", "2"], "-", 
        SuperscriptBox["a", "2"]}]], "+", " ", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["b", "2"]}], 
        SuperscriptBox["h", "2"]], " ", "*", " ", 
       FractionBox[
        RowBox[{"Pa", " ", "-", "Pb"}], 
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         SuperscriptBox["a", "2"]}]]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigmaFFPlotUpr", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"exactSigmaFFUpr", "[", "r", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "a", ",", "b"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(\[Sigma]\), \(e\)], \(\
\[Phi]\[Phi]\)]\)\>\"", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"exactSigmaRRUpr", "[", "h_", "]"}], ":=", " ", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Pa", "  ", 
         SuperscriptBox["a", "2"]}], "-", 
        RowBox[{"Pb", "  ", 
         SuperscriptBox["b", "2"]}]}], 
       RowBox[{
        SuperscriptBox["b", "2"], "-", 
        SuperscriptBox["a", "2"]}]], "-", " ", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["a", "2"], " ", 
         SuperscriptBox["b", "2"]}], 
        SuperscriptBox["h", "2"]], " ", "*", " ", 
       FractionBox[
        RowBox[{"Pa", " ", "-", "Pb"}], 
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         SuperscriptBox["a", "2"]}]]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sigmaRRPlotUpr", "=", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"exactSigmaRRUpr", "[", "r", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"r", ",", "a", ",", "b"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[SuperscriptBox[\(\[Sigma]\), \(e\)], \
\(rr\)]\)\>\"", "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numSigmaFF", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<sigmaFFPols.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numTableFF", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numSigmaRR", "=", 
     RowBox[{"Import", "[", 
      RowBox[{"\"\<sigmaRRPols.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numTableRR", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", " ", "=", "1"}], ",", 
     RowBox[{"i", "<", 
      RowBox[{"Length", "[", "numSigmaFF", "]"}]}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"r", "=", 
       RowBox[{"a", "+", 
        RowBox[{"h", "/", "2"}]}]}], ";", 
      RowBox[{"numFF", "=", 
       RowBox[{"{", "}"}]}], ";", 
      RowBox[{"numRR", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "0"}], ",", 
        RowBox[{"k", "<", 
         RowBox[{"Length", "[", 
          RowBox[{"numSigmaFF", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"r", "+=", "h"}], ";", "\[IndentingNewLine]", 
         RowBox[{"numFF", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"numFF", ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{
               RowBox[{"numSigmaFF", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"numRR", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"numRR", ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{
               RowBox[{"numSigmaRR", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"k", "+", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
         ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"numTableRR", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"numTableRR", ",", "numRR"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numTableFF", "=", 
       RowBox[{"Append", "[", 
        RowBox[{"numTableFF", ",", "numFF"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.856971261280095*^9, 3.856971280248096*^9}, {
   3.856972022172943*^9, 3.8569720283789434`*^9}, {3.856973280185215*^9, 
   3.856973282261216*^9}, 3.857357519516061*^9, {3.857580385623954*^9, 
   3.857580388994953*^9}, {3.8575804522680626`*^9, 3.857580453339061*^9}, {
   3.8575810346653414`*^9, 3.8575810350125875`*^9}, {3.8577519304614925`*^9, 
   3.8577519371014905`*^9}, {3.8577520234844923`*^9, 
   3.8577520289014926`*^9}, {3.8577520772364917`*^9, 3.857752077389491*^9}, {
   3.857752149000605*^9, 3.8577521786606073`*^9}, {3.85775261129921*^9, 
   3.857752612780367*^9}, {3.857752856351965*^9, 3.857752861717035*^9}, {
   3.8577530465776043`*^9, 3.8577530501146035`*^9}, {3.8577534204763517`*^9, 
   3.857753423815352*^9}, {3.857753649172869*^9, 3.857753690798001*^9}, {
   3.8577537372795563`*^9, 3.857753743771558*^9}, {3.85775378709256*^9, 
   3.857753796460559*^9}, {3.8577538455645585`*^9, 3.8577538525205574`*^9}, {
   3.858179926627231*^9, 3.8581799616829863`*^9}, {3.858180027155986*^9, 
   3.8581800598749886`*^9}, 3.8581801463950796`*^9, {3.858180177826081*^9, 
   3.858180204667081*^9}, 3.858180255776083*^9, {3.8581804012846813`*^9, 
   3.8581804015366764`*^9}, {3.8581804422965665`*^9, 3.8581806514951487`*^9}, 
   3.858181603158742*^9, {3.858181772171726*^9, 3.8581818271619396`*^9}, {
   3.858268700956673*^9, 3.8582687150896745`*^9}, {3.858268761691772*^9, 
   3.8582687818607707`*^9}, {3.858268841172467*^9, 3.858268944825199*^9}, 
   3.8582690456887207`*^9, {3.8584983213486524`*^9, 3.858498329803651*^9}, {
   3.8584985653024817`*^9, 3.8584985691654825`*^9}, {3.8584988422231336`*^9, 
   3.8584988748908176`*^9}, {3.8589639160193567`*^9, 
   3.8589639746721306`*^9}, {3.8589640187700386`*^9, 3.85896403293742*^9}, {
   3.858964117042669*^9, 3.858964168359229*^9}, {3.8590011944301805`*^9, 
   3.8590012004012337`*^9}, {3.8590021892141128`*^9, 
   3.8590021996474543`*^9}, {3.8590022737811365`*^9, 
   3.8590023026073165`*^9}, {3.85900237124533*^9, 3.8590023815364375`*^9}, {
   3.85900251297081*^9, 3.859002527209234*^9}, {3.859003102501376*^9, 
   3.8590031916363745`*^9}, {3.859884500901596*^9, 3.8598845046876793`*^9}, {
   3.8598845520827427`*^9, 3.8598845570037017`*^9}, {3.859884654263194*^9, 
   3.8598846865611887`*^9}, {3.859884783296175*^9, 3.8598848000228806`*^9}, {
   3.8598850026800256`*^9, 3.859885014879923*^9}, {3.85988505706787*^9, 
   3.859885065347701*^9}, {3.859886794525633*^9, 3.859886807960179*^9}, {
   3.859886851592572*^9, 3.85988688542616*^9}, 3.8598879266499205`*^9},
 CellLabel->
  "In[148]:=",ExpressionUUID->"84a01d31-c282-4ece-95ab-fc2df2045dda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"gif", "=", 
    RowBox[{"Animate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{"numTableFF", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "sigmaFFPlotUpr", ",", 
        "sigmaFFPlot"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"M", "-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<SigmaFF.gif\>\"", ",", "gif"}], "]"}], "*)"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"plot200FF", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"numTableFF", "[", 
        RowBox[{"[", "2017", "]"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", 
          RowBox[{"PointSize", "->", "Small"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[OverscriptBox[\(\[Sigma]\), \(^\)], \(\
\[Phi]\[Phi]\)]\), T = \!\(\*SuperscriptBox[\(t\), \(*\)]\)\>\"", "}"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot1FF", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"numTableFF", "[", 
        RowBox[{"[", "200", "]"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", " ", 
          RowBox[{"PointSize", "->", "Small"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[OverscriptBox[\(\[Sigma]\), \(^\)], \(\
\[Phi]\[Phi]\)]\), T = \!\(\*SuperscriptBox[\(t\), \(*\)]\)/10\>\"", 
         "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plotFF", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"numTableFF", "[", 
        RowBox[{"[", "1000", "]"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Purple", ",", " ", 
          RowBox[{"PointSize", "->", "Small"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[OverscriptBox[\(\[Sigma]\), \(^\)], \(\
\[Phi]\[Phi]\)]\), T = \!\(\*SuperscriptBox[\(t\), \(*\)]\)/2\>\"", "}"}]}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"s3", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
     "sigmaFFPlot", ",", "plot1FF", ",", "plotFF", ",", "plot200FF", ",", 
      "sigmaFFPlotUpr", ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"ImageSize", "->", "Large"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<r\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(\[Phi]\[Phi]\)]\)\>\""}], 
        "}"}]}], ",", 
      RowBox[{"LabelStyle", "->", 
       RowBox[{"Directive", "[", "Black", "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<s3.pdf\>\"", ",", "s3"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.858269038694723*^9, {3.858963926113634*^9, 3.8589639470370903`*^9}, {
   3.8589639889268236`*^9, 3.8589640052228093`*^9}, {3.8589650470580373`*^9, 
   3.8589650507732115`*^9}, {3.8589998752440042`*^9, 3.858999887288005*^9}, {
   3.858999926845004*^9, 3.858999929866004*^9}, 3.858999969800005*^9, {
   3.8590024765784173`*^9, 3.859002501629655*^9}, {3.859003142311374*^9, 
   3.8590031522643757`*^9}, {3.8598845216624746`*^9, 
   3.8598845235140104`*^9}, {3.859884585498247*^9, 3.8598845967764754`*^9}, 
   3.8598846908602767`*^9, {3.8598847258948154`*^9, 3.8598848648830323`*^9}, {
   3.859885688885903*^9, 3.859885724596113*^9}, {3.859886045809221*^9, 
   3.859886073254018*^9}, {3.8598866053346343`*^9, 3.8598866092129335`*^9}, {
   3.859886654092792*^9, 3.859886774923052*^9}, {3.859889246512622*^9, 
   3.859889393023138*^9}, {3.8598894525541763`*^9, 3.859889595630785*^9}},
 NumberMarks->False,
 CellLabel->
  "In[143]:=",ExpressionUUID->"9036a5ff-e076-4dfb-8129-5c9bf5b69dec"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwVzH0w1HkcB3DlKT2pPBQnOwpFzjUKdzp95hO/h6Q85KHScCSuqzaL0IWY
IhRidVRud3+7P7U1ri1LRR2tS6cSKa6oROjylJvETdvTfe+P97znNe+Zt03U
vsCd03V0dDaS/N9uFw3GA65JwE5oc3rgMIXFo6gR1Eqg/eMeld0RCt84ponH
iBvG+jQxxGfPTbjnXpeAtYbteU1szvVm3KyXwLprxpOjWRROiesWfNMkgVOO
qtPvjlJYc0DoNvuhBESuJ/+cdpzC1dRfabdHJOB/d6rKpITC+gs35xQulYJa
ENa3p4JC7ZcfvStCpfBA766nqIbCrIGy4Zo8KXxcsyNIe4vC8tL+IstGKSR9
kf1Q0UnhTo/RFy2TUhA4mTjPGKTweefR0iFzGUgHdzlnT1K4MuT51C4XGejt
W92fo09jWGuRw3xfGczis9L8TGm8/9uj7S9jZbBkySqZgy2NC7MSd3RnymCk
/V7/fRcajWy7OL8zMrjVkBeiizSi473eN1dkcHDlJzvKn8bA5VYT1Q9k4Gn8
oj8snMbz+Vr9ilEZqJoqjQ7spVFZV+6/YAYH4gsal2WpNB568avwrA0HxZGx
mupcGst3O+VHe3Iw/0b+GJbRWDxucWh9KAeaaEWPuoLG1u4S0ZYEDirzVg0I
qmmsyn90ZqCAg7inrezSRhqF34pOlSo5cNKnFpm10SjyKS9NvMVB1D8O57XP
aPQNst+V0sNB1sjWU4+GaGyzS4x//y8HM86t69g4RWNZuF8qbyKHNnf3lzW6
DHoU5m5N+loOT0devbOYx+CSZQHu8evlUOReOx6zmMGq7Ge+I9FyELwtGw5y
ZNCy57brsXQ5LLos3sy4MdhcvlYQfJr8UdwXKy8G/TabPaOq5VB7rH73h00M
prerHqjvyyF5s3X64W0MTlx53LRhSA6WG0Oyh2IYxJLwgpm6Coho2dIbEc9g
55P40AlrBURGu7ao0slu9mpi+ncKOHHZaK5pHoPBFoubCwMVILdTe9mfZFB1
pK+cFiqgxSBgwRyOwZd/61G2OQooWhPjZVzJYFhVzdgKXgHSjuPjfVcZTPV2
bL3UoIDvi3zcov5gcH/rp8ztXQpwygjV6LUyWN0Q7uYyqYCgnLsGCV0Mtiit
652NedjUobIwHGDw+FZ5mnI5D6M9Dk/93jBYLFJ7+nrz8OH3tucR7xkUZS5t
Nw/nwdHT/vUZXRYlyiltLrEyxfSnO8QtbXdsPxHjSPDwFLG9dVxKfwQPtd0P
BwP0WOyuuyG4FMkDW3G12VCfRe93wcL1O3nomFy3NsGARfPYnFmpe3g4kTlv
iDVi0asgzHWc+KvoX1yTiONqnCOi9vLQxMVnKIjv6XZWsUIedhQ7z/9MnCGz
2WYWx4OH3lVr9UwWh7rqlBcTeEj9LBi2mk3+pxU8tEnk4Q610MqH2Ht55McS
4hXJMb7JxJIkQ/+D+3k492G2sp040CToXyaZhxCvtA3Zc1g85LHM5jrxKrFb
nJq4MlLr45zCQ5+YFfcSG16SSUwP8DA4M7nDYy6Lqx8nNB8l7qwSv40ljvpM
v9USNwqNjE8SF9pZWgl/5mF/6BOHRuIbvmNUH/HlLB2vceL/ABANNzU=
           "]]}, 
         Annotation[#, "Charting`Private`Tag$18159#1"]& ]}}, {}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], PointSize -> Small], 
         PointBox[CompressedData["
1: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
u7N0L8VLF7/L+8zJ/ztsdbuwT4B+Zbz/aTPy/1Wv3mgdEGC/7aa2clPy/z4T
li44KED/f1PWNJmQ/2+MbzueQJzT/Y02cU4UrWyiADQsqxHG5P+Vdj9ZgNE3
t8U4GZH/T02h/wRIe/cif9kQ8v9mLUafUwUwPLDr0a7B5P+pe7Y6JICi+uD7
LEPy/w7SxO2HBVho8+HtnUHk/yt/33ycTvmj7VH6eSD5f5/ZrqY86dmUWxnq
xAGN2S/XCqQXjr7LTQeQ/4/qvOSmSOPrWDuYNSD/r+XZ2kchgM+yXTcW6ZP/
Ty0kgRGgqDJ4ziY98v9m2loFRwWgtv+JoEv+vzAwsVMm6W/3aPZyf/L/Sjk4
JsDmVEPpVT/y/5X9TkjHBSh/UNvQ/h/5f5+VVl+zSD/X55rrEbtRYNmdEMDA
ZvIs677k/6MGO+/PEaDXpstBc/qQ/1dup56kelkZtGJNb/L/KcoGRlD6/YAD
OuT/zYY2b8gVYL3vI8fTvcj/F26OLM+j99XoNaSsJ/l/h5dqgwoE+Jm+70Nd
D/L/leMOhBQKoDniSoomcTcf5QasAJuKWyeZaZP/b6T24KwA7lp1ZUx38v9R
MM7zHMXz4UoXv27k/7WSL584L0D+grtXN3Ql/5+iNEg03z4/jNK1yP+bTX08
o5j0Z8X89ec1yf8XCuSAqV4vdT//RIP8v8Ov+trLAhQ+u1b3TZ38f6Vr2MSr
AqB/ezcd4nbvrE5x1+jvBXCDRqqR/2/suPfZdQHerqsa4tiF/H/UQj2LmwLw
b636BXUm/0+rEXaL+imjiPatncj/K+3CbQFkY/pWSB3J/5sFXOx3RwDYHZF0
uQP5/8Ji2eK7pLdtqjNfqpL/d/iPHJcA33r5/fypQv6/MsRLrVSAnn+Z/X2J
a5XHQ2UClCkc9cb8Y3Fw46C1R8tJ//UPJjr/ZXFeVJjq9woB1h7r2WnpHxb3
alXuYqoEuNZT4bu9ncVbKcoNXsrXD/q5it8s/jXdJNU8pPWTX/96+ReL4wqf
Dx/7WABq40xf/mRxqcPYc5ueCKB9aMyMnz9YlJSPe0r6OrO/Xx/iZ97vywc/
p/q0+EPwqDYWezZOXrjqhQC/jdYFOH5nURaV+PHKSwFakvrOWvKNxRgtpSBQ
/Eb/GrWllcXCFO6v9xsBpq+63EH4ymK9Kb/jVLUAT0vbblxoYdGo8EdvlXf0
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
s5I=
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0.5, 0, 0.5], PointSize -> Small], 
         PointBox[CompressedData["
1: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
8w0UDaEhg4d3WGH9xe5jp5CGv9xOJS1rinxqyC24bUPDv5rHm6vR6l7yRGkp
DTVKxUeiBVgf+rweu9jRMDZo9H4TiiLx0becLi+jQdNPXfAOXaY4tvnPchoG
vUe8SBRS5CffDqygYVWjNFjYUMTE6MFglgMNA5rGu7rQW4o1D3WsxPM5W73n
lC1FTlO7seWm4cVuwTK7pbh/NFRnxa+modpUu28QLe9loP9yDQ2X7+huPW9H
Ecu+vbmGTjSUs1OurV2G9S36xeLQdTQ0rSu/J72cItcUZ2HHTUND5udzuehW
/LQJG/F6Pfvp7G5PEU2j5nfezlgvknw+Ka6gyJrihduKXGhQe260uAR9hDr5
Y4QbDRcVmj23OlDkbkPnvrXuNBz8Nmb92JW4/3kKFM964HgfpLTL0aZ9p9O/
e9IQ2bb/5o5VFNka/WOqYBMN96qjddUcsT4rrrh6cjOOx6QB5wp0U9a5BS1b
aPBbfc4jaDVFFI1w+m2lwWP1KnOtNRSxLl638oAPDQt3en16hA6nrr+u88Xx
sPJzC1lLkdwG2a1TttMwvXH42clOFGn39Pwa4EeD5Yl7tx6jtfl4s4MGq8s+
Z3evo4hTtKqcsj+ev8pM9ynrKZKouD3FPYAGpykOnx6j72fd074WSMOz2QfN
d2+gyB9DvgGgIVP/mfvkjRSZjd3lil1Y/0p/bqhC+1JPy7NDaNh0/JjuLmeK
MA169t27sZ68t76l6UKR5578gGB9fPRW+yF6VN+zTUfDcP74VzsFuFKEwkbg
dTgNN0WOnpPcKBKpGBc+PZKGtv8CLe6i87M+jIiIomGv/oy2be64PxouOF4V
TcOZl+c8xnhQZErxcQ21fTTk2kZduYVeT3Wc992P69e8/ckmT4okN1jNuXmA
hu9N/91U8KJIhSdf8PHzB+uD89FDvd+Wrj+M55/aJuG8iSJzo5c3nY+hwf2Y
m5vUZopsx9H9GYvrL9bj6EU0lzXUKYzH+uNaEL9yC0VeGvKBB883YavTT7Ry
8VWp1iN4/V7+/pbtTREbSiZpXiINT+/KbhJspUg0374l0bDT00bcgS70vHGm
MZmGfbKvC4/5UKSrV9lU9zjOt/p96Wa+FNGJ9r0VfALr+e0twjfojYp3hfdO
0lAQP/Rw/zaKHM9Sq1dNxf2raVDNYDtFKg2DXb3SaHhYwCx4gpYoftyem06D
SH24UaAf9ieU7q5hmTT47OztGLeDIjsaIiVWZdEwoUNtbwn6jGdTAnOKBrOz
+i1uOynyutd4fN9pGmYt+jFW2p8iqtEx7BIRDY27oyaeRy9VfD8jmcbr7R/c
YxdAkX1Z82+8Y2h4sEOU1oMuxvRgwtHw+eRepROBFOkpaq+OEuP+6C61al4Q
RfQoy41Pz9CAm8SWF2gXXKga52j4eLVyWUQwRU7y0/k8DS1biodr7aJIVa/d
31sXaOi5cCqxDD0sWhyrkEPDpaSYz14hFDFX/KvqfImGaxXWo0fspoh/1hpR
zmX8/RlO8ufR5/g4eoUGX/GZ57Z7KPK2aETh0mv497Qn7+lAj6XcSOZ1GuYY
q7ccCaXIsoYivIA0bH1kr2Uchv2h52iM0nj9zH4ZV6Nv9m5tji2g4UnSHRX/
cIr04Wp7XkhDt0XF/dERFDFQxO2tGNfvxUzr62i3LL5h///6Ob4ykiKphlWj
K27SYHP/X0Ef+knRVNzhcH/Mq7l4LIoi0lSE/pZSGlS7U/xMoymysIEv0DRI
BDj9q0EHes6wGP4fDdjme/nvxf6291Dl6jIapjElmaP2UeR91NvV4nIaGJ84
5gp6vKLZ+693achP3rt7+X7sv7KStlndp8GidYdGJ/qQYduP4w+w/l47mxp/
gCK3ipbs/1iB9avj1weDgxT5KsjAiorzeWjJ3wdoo4a+9H2PaPiQdbZ10yGK
eHgu1amtoiG76Doz7DBF0nvZq9pPaIgP9DGm0dVRvxf4P6Vh5eGLiYtjKDJC
EdvtahqSzKtvv0QvzuJvUOD56MXe2h2L/aPh8DeudTS42sQkjImjSE6Ry9Yr
9VgvputNv47+KCj8+reBhkdvWrOXx1NkYoMSrmAa5n3e1dKOdvD0ljv9DH/+
1fefhxIoEtN7J6XzOfZf4Z5vJh+hyO2oCZMXvaRBy/fV8VL0d4WASwmv8HiP
6Y5ff5Qi07MqzV69psGgcL/vN7SX4ZS7Rm/xerW9SE5KxP63KMw+7B3u5+7v
E4ySKFIrqH9R+Z6GuK7u9ffRMg3TNk/8SEO9yrQBt2SKgOdBnDE0RDTN9fyF
DsHqV9xCw92+iOyTxyhyGbtTmc+4v6hsuWJ8nCItConHnVqx3nj8SH6IVsvC
5dFGw5tqQ2vPExRZZQgXfrRjfZdWf/AbHVeUNofqoCH2ufv4lJPYvwv4E8b+
cfy0RcYpFBmot7H71IXjKbtsbgXa2JNpmtODP98//J9bKkU29w56HOyloexy
ScpP9KmoVV31fTg+O3v+JKdRpF4hZ8/Ur3h8/RbzDdMpIpclJR30DdfTnBtU
GZoYOmNCp+GtxGzd9RkU2VOUP0llAPuBFw9re9FX+e3yJw0Hls2yj83E/FG/
2fT6IPajzn6ntbIoouF5+5bEbxqKvyz4rxC9unecjcMfrJdbvuUtP0WRhKid
9aK/eL1Gm+9uQZcr8AEb97/esfLhpykymKn9xUKCgdoprwKUsyky0zB0V6Ik
A4rNOy6eQ3sX1Uq8HcYA+SbOXSyiSLaAb9gYKDzUmlCPbqzfPz5yOAP9tR/n
+9CYnzxfsY9HMFA/7lnxENqqF9tnGQb0He7JnGQoEhZ15MY2WQaigr/oGbIU
ua7wybpEjoGR+cHjb6PbMhfXyCkw4Ht76etVHEW0DFM3blBkYEd5aWArem1R
9+cLSgzMWjPzebgY8zUfj0YxoBJnKT/6DEXu4dnaKDMg8ylytBj9G3ejdBWG
vx/xxews5r9ehzFtqnj8B5TTqtA+URdEZmMZ+H3i5xi3cxShFfgbigycOn/G
ox/9LHNDYdN4BqJVRNGHzlNEyTCP6E1kYO+35f4TLlBEUCT/ZNckBnpvG83N
QUcINq27r8ZA0z/zx4svUiSv/lbzGA0Gwu3MTWvQXzzG7tykyUDlVa2tnjkU
mdzr9ytPiwHm8M6Ab+h1UQ8OSU3Gz3dPXHb4EkWSFLSUHacwEPp4ye/xlyny
IHP3KXYqA9Vbc8IuoP8a1Oj36+D1fbnm0YIrFJlTZIAHyECF8cquKvQ2wT6L
Y/oMDOx6/975KkVYfrkZMLD/SiTXhX7hgVfSiOHXm1nUNYqM7o1/Hz2NAUfd
R6eUrlNEGNW8rXo6AzZiv6ZsdJTCImxFGQj878pH41yKFPC3e0wYULv5ovQ2
utOgCxMIA20vx/va51FkahFfABlI9k5rf4PeIMjWcZnNAIaARX75FDlW/+Pq
pTl4/OWH3f6gH3qsWPhnLgPOJ3Y4JhRQ5F/PuQd2ZgxIS86aNKmQIvOicPud
j9djcXruebSfwvo3X8wZGNHfqWlWRBFx5vWtCxYysGpUrfN99CsDuW9xixjA
n/JxLKaIShHfYDFQUlhk+wFtKyiRMwQGUgQef3fcoMhe7A72LGFg+dbj+/+g
izC9PSQMmDlOfh53kyLdPfwdagasKpSGxpVQRDeKvyHGQP4n528c2lkh5G6h
gIFrWp6lM29R5ETmU/sRQga6rG03lKIf8e24DQMXo0dX2ZZSRLKID3B4fRNm
KzSh5wueY4fFgOvWK7i0KbKzfmaE9TKGzx/DutFnPeJGnlzOgEfCm5uhdyjy
hr99bc/A18dVZPh/mP+jFmjOdsD5Sr9OT0bbKZy4sH8lA3FFT++rlWH+z+yY
U7eKgdhDGyrOom8YWP83eTUDL7ry0k3LMf8XnrILWIOffzTP/BZaX4Cd4FoG
3Bdcvkzdxfxfj/F8HQOXzpf9qEGneJztcluP82mtu8rGe5j/e4b2XN2A63Fb
398WtFQU/wCAgYziNTd33Mf8r3Atyd6FgacXNtn8RAdkyqhluzJw+WD3+X0P
MP8b8B/IgH1f8Wu5Csz/hTdMF3swcMh9TfMJ9DiBSukRTwY6grVL1B9i/q/3
tXntxcDqhXc3nUEf9LhbP20zA3TMy/czKjH/96i5hW9hwOn6T5NCdH9k8JdH
3ljfLrCrLB5h/lfA5evDQIttneAB2j1TV9LXF8dzY5WMfRXmfwO+YDGwxGGH
qBH9FKuBrB+u38kfZVweY/4XmHDrdjAg4d9JWtCL6mOMz+9kYE5Jt922J5j/
Pd7fGPDH6z3N27AffbGHv6HDQE/l3dd7nmL+jzxWkxrEgGjXUc9/6AkKXzZ+
DmYgQMqi6FA15v9My9a5IQxsvT7mjXwN5n8DviFi4NsQNB1Dl/Lb+R4Gkt69
Eo+vxfxvvSxOJ4yBjzkagtPoafXiMcHhuL7PRBdMqcP87/FXdDeCgZr+Rb/O
oTN61kxTjcK/X9WgMqMe83/klULPaAYwZfy7jh6pMNIydy8DJ1X235nXgPk/
0+2J5H5cby9y7UvQuwz4wMXAy/XfrkAj5v/C0S30QQaG2xd+uItutsbO+RDW
3+eR7cImzP/1Zb8ghoFJE1vKq9ArPbC9j2Vg596MbSueYf7v4W9g4/o1kG+t
Q9+JrDplnIC/P2A+b+1zzP/yOjgiOB8iF258gZ6RGZH35CgDZw66Ozq/wPxv
wN/Qwfm85Oakd+iswhmPticz8Kx0bJ7HS8z/1ofX3DqG+9U1B60WtGz92/fy
JxhYM+6Qy5ZXmP89zLZvPMnASvv8bW3o3T1JAxdTGLjwcscy39eY/zGo/kpl
wLhSUrIT/YmP++m4vqpPx/u9wfyfmYH/MXD4woz2brSjQb9OeyYeb3XTeP+3
mP+xe55/igGcNhP60GXW3MLY0wwsXBXZFfAO83/d7wfPshn4k/ghpR9tgsFW
n2ZAPmOactB7zP89l96EMPjzl/xdvqJPRw73ecDi9fylHxH0AfO/vOu3sWKs
3xui/b6i5TMLscAw8MHj5eygj5j/DUbJF5xlYCP8fdKPDi30TpU+z8CWWC/z
wGbM/3w5uMDAvqttIX3o1roJl7mLDOzJD4j1b8H87xEw/2sOA3rvtvv1oNfg
RLa8zEBpkIHujk+Y/yOnrDh+Bff3P2cud6Lv8rdTrzKwtEdt5LbPmP8z+AaG
gRuJAWbtaFOD6X17cxloiNq22LsV83/hwYiaPAaE82eM+YQWWb8ZqV2A6/29
e4lnG+b/urkndhYyMN1AYd57tKIHfwOWgU3JJQdd2jH/92B7cIOBL5aXzr5E
h0fCXNebDGh8rspw+oL5Xz79v8slDFydPN+1Ad2ewQcknP8PT/x06MD8b2D7
bNlt3M/Zq1ufoJ0KGUzADFh2FV207cT8b/2rq+M/BgZ9XpfcR9+vWxW6sBzn
/6Vf2aQL8797jnTCXfy8xIq1pejZPVLJL+8xYKET0Ty/G/N/pLOa0QMGYsr+
WOWjGRyN0AqcH1Pe7DLpwfzPx4WHOL45w8MuokcZbCmd8Ajnp0+Co24v5v/C
2zZbq3D/dZSSotGR1uMxcTEwIXT9oUl9mP/rdrqNfIp/v3XFs5PoDv7xUPX/
58cvpX7M/z3aIWdrGHi/NKQ/Fr0+MlTyRy0DXgWDd4Z9xfwvX3dEUM/Aq+W9
bhHoigz+Bi8DDglltd/RQ/oHuJZGrJev9Sbs/Ib5v/CV8ZxnDCSenDGrDb3d
es7NA8/xeL0LND2+Y/7nP+4FAzpR99++QL90/1Qz5RUDVwTygat+YP7vWewc
+JqBf+0jnj9C20Smtpa9wf2hbLay1QDmf3m+IGA92fFGowRdmCHE6ID73aPv
f2b9xPyvT8dd+4D1tvHE1YtoncKfYySaGUg/c3relEHM/9Yr6RUteH6bKo9n
oI/XXZgm+oT9iC1VPvoX5n/3YdhRMiAOVL0bg5bo2WBp0YbXUycydQhtFonl
pZ2BXbsqLHb9xvwvzzccDJiGv7jVgT6TsalleicDc2tbFT3/YP7XL90Z0YX9
F6U98zlatXDs76puBo63/tKx/4v533rHYbVevL6HPnffRe+re6C8rQ/769P9
ieZDmP/dtU7f7MfrCSslr6J7undjB8PA/INGVjr/MP9H1uSt/479yJ8d6zLQ
LvJ8oMF+t+q5tZKEkJzM2Pfo5wAD5jVWIw+gq/h2Y5CBbPd/WQPoYYWzPqT9
wuv1bYXEdkkhMbdO2N76G+d72Tbz92j/Ov6BCQP3umpsVg8TknPuiw4cHsLx
Wf/V8CH6bfdJpaZ/OB/uFr1eKCUkYyO7MnQlWXjnr+V1Fb1Mnr9hwoLL+/7b
U6SF5EBG9rV7Uix09WzvSUHf1B9YOGY4C2/bvPplhgtJX8GKCq8RLFy7LHoQ
jjawPr8qbyQLgSucdnaj3eowfsiyUP9rY7f7CCFJdV/vs0oOPdhrWY9+0n39
GyPP8vcftgtGCol0pNzePgUWzieu2VKEXijP35BlIfLzpdmGMkISmFGSmjyK
hZ5J3xoz0Rf0x0x5P5qFkr1pyxVkheR9wfbLJip4fJPvZ0aix1vfnx+tykLr
yr4b3Wj7Ov4BMfv/+w1uckJyyD1kheY4Fo5fNt5Zg77V/fSl33gWXj/vlCPy
QvKVvx0xgYV/IS/Cr6ON5PHwJrFwbo/z7ckKQuKR8TzCWQ2PfzpVfwydrm8q
c0mdhc9akaWSikJSXRB34rcG/n5ueFQAeoT1R007LRauiIZUP6AX1y24mKnN
Am7K4Q5KQhLsfmLul8n4+cdS8++gc7o7/jOfykKn3+y7xqOE5GME3yCwMPx+
0rnT6Inyp58918W/v2+Kq8JoIXHI+O5poM8C21jZGoaO0bfHGcjyzweodvRt
vlwZspB0pHGPk7KQfLf6Jz1+Ggu2Ro5R99HT6/g3OliY6J+6draKkHi5X1Mr
nMFCDJcjzaAzu2XODTdhweTQyDglVSGpjeADCMvvT83haBn5m6ViUxZK/yUp
t6MhQ8X22ywWxH/Eo9eOEZIQ/W0NVnNYcLo65VM5+nLBXbcTc/F8yu2TTMYK
SYuVesfHeSxIm60afQqtVhccMms+C02B3ptkxgnJKne8UuY4nv6XY4PRcd26
R2sX4PFeGNj7Hv1fBH+Dg4UVcH7FsvFCMiD3jPNfzAJWme9FaOMME5P/LFjo
t1zgP3WCkGzWj705agkLAlWDW4noUwXvBW6EhWb/z68G0fVW/ANOFhp6yus2
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
Hy/m9rCwPUIv4Ql6i97CecP68HiIru8UOyE5nX+ibGU/CwrSktq70Q2WncuY
rywEJJ25XIWWr7V+3vuNBYkj3iray4TE0u2015IfLMzfv9o+GB3a9b07aYCF
svnFrg/R18Ltw979xP7s3hcr9eVC0iqL7dovnL+zHST90Zrp/5KjfrMQ4hCX
dhe9Rm+d+tM/WP+mLpUaby8kR/KvndMYwnryK1zgi75rKYsTEPd/1VTXUvSv
Go/btyQ4mBJfuWL0CiExdbtpqzCMg4nD9o73Qm/tUmncKMXBbHF8bgFaFL4N
EzUHx118dGUchKRJ9l7Hr+Ec7Jc8uHMDWjFdfffSkRzELp16/BLaWm/XsEwZ
DmBeZcIQOjwf45ssB1WjnNc7rBSSXEs93OA4sFETDjHo9poocawCB3ZtxuFf
0dpuz0yeK3JwQk1QY71KSJy6TEr0R3FQvkL9Two6MTyW2j2ag4Enf/9+Rt/H
hf5AmYOKaaOfmTkKyZ80/oU/DpZGm8TFomfrHW/bPIaDJfbpY16gffP5N6A5
8L6xPdhwtZAwlnwDzUGwwPBCKPp5Df/CBQcxd/QKKtGj3L6NFU/koH67ZsbE
NUJCdeHwTuIgMiVirQ86MvzMdCt1Dj5fvvmlGJ0vO1R0XIODHwXGa2TWCklH
2lqrj5ocTKj7kOKEnqJ39ampNgedK4uvnEWvzx+5Yd9kDrrzHmV/Rydb8gGd
gw/yJ7ysnYSkooZ/oYuD8/ff/zuOHnJV/rNTl4NNucVBH9Bzu3zwUDkw+VBz
x2SdkGwPL1cZZcCBJreoORLNyapluxpy4PIr7XUV+mUa/4IzB2X/1l6auF5I
lPUe5/+dxkG27sPV3mibfJ0ly2dwcNHjzrN8dLQlfwOQg69r+k2HbRCSwprG
tZ0mHJyZ2eOxAt3lavxxoSkHYfHqW0+hdboO+yXMwvFruUG1ozeGv/v5cjYH
o0Pi/83dKCTHZTFJz+VgKMo0aT+6Mi15VNg8DixGTPv2FC2h155ZaYbnV9Vv
ouYsJGb5BCcMBxsU46y80Tss+QcMeH5/7pnmoc/U9C8qXsjBhaUbfw6hX7va
PRy5mIPE1tnHl7oIiWoX5+hkwUHS3+nSqeil4X/engUOQi5GrPyA3ie7xvfH
Ejz/UPM9012FpDjt8neBJQf5l37v2o3u0R2xL8WKg8lXR9qWo/XyXXFD4mDz
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
          
          "]]}}}, {{}, {}}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], PointSize -> Small], 
         PointBox[CompressedData["
1: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

          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          LineBox[CompressedData["
1:eJwVzWlQUwcUBWCKGy1SWgSqCEhYRBapoiJi8Xp92ZNWWSwqiEJFxbaRACoo
q+MCaECREWRJXpInTWlUDAEkQYkOMrEGXBApFBDUsaIsbVEsKLSvP+6c+ebM
nMuI3R8aZ25mZvY1ff9nwOXZoyHXpGBz2ouVCAIsHMKbixqkUB1WL89ZJ8AR
7/Rzw7SHJso+kwULsPKnsdW5eimsXxXrYVorQHt5f5bhhhT26tTenoECHD+n
s/nythS08RJF/zIB1qaKAuY+lMJck0dQjKsAV7Iep7e8lkKGdYu0ZJYAb1QZ
rArcZOD7ap+bu5GPk//uZV6MkEHzbiJ1sICPx5+XvKrNk0GppVH/eCsfy4uf
nXW4JYNpyQt1uAsf44KGnpjeyuDYQtFE7Wse9nacLB60J6FhqesTUw0Pl33b
Ox7vT4KWvcHaPIOHkW1nvT4XkqAZWXz4jpCHrZfao57uISGrMm2GaD4Pvzie
/F13NgmNmhLBkZdc/Ni9S76xjIQzc6f1YTouovfd/pE6EuxkVUVLc7kYusRx
THufBFv/KFefKC7+LJmcdXGIhHCt73WuLxdVuvJNNhZy2OfRP+U9zcHMJxWi
SoYcuE5lv4+2c7D8e1/JrmA5rK9Ie/G2koOFowsyeRFyaG3tCL6ezsG27iLx
liQ5hI4X+w6EcFAjaS97ni8HHjPvUIUnB0WB4gvFKjnYmubnDZhxUMwvL05u
loOjq2BM1slGYfji+JQ+OcxuF182XmXjPY/kxIl3clj+6/mmbyRsLInemEbN
U8C5+PMF+3azMaggd+vBpQpodtgW2LSBja6eIasTeQooj/RSGRzZqDnRI3y9
SwH601bdC/9hoUNfy6pTGQpIe89+k/WYhcbydYs2lyrgqNBljlrDwo1hdj0s
rQIa7T99YzzLwowHV+7XtCrA5uQ7sXUiC8fqOm8LBhWwMjHTe8UmFmJRdP4n
M5Rw4kKDk8tyFnb8lhgx5qwEY0+eccqa7u1ejJmvUYJLxHbPgr+YuHmBk7Eg
VAkTOTYpyx4x8cqxgXK2SAmecRUlnVomPv1jJss9Rwl32LemrEqYGKmpHfah
lHA0KL4nMpWJaUzvtuomJYz4dhnqI5l4oG0qO6pLCfP0tl5Z65mobYoO8H+r
BH91nyTJjYkmlfMNP2sKWraEKm5aMPH0VkW6agkF2aWxsydHCCwU1wQLmRSE
rXt1aH87geJstwf20RTwr3SyGDoCparxyVzaj5LOMK42EGi6d8d9inadZf1M
pL3YOSHl2Q4KtHaCgZ3XCOzWNS6qjqHgz9VpY2Qdgcw3m0W8OAqmHROOuNYQ
aL8nxzLtBwpyRFZ2PmoCifzIVaO0VxR+1av/hcCEWr8dsT9S0HepWS2kfXdG
h4YrouB8QG+MqIrALJKxzS6BgjVJTu4aFYGDXTrV5SQKosz5Fmsv0vsf5T9k
JFMQ4KFnmSj6/5KYD0W0Hw0fzttOW3pwzqYjBygI73vmlaUkMHRe+DvOIQoM
yDPclhOYGeTJ0NPWFTsFRtBWx0zy/VIo8BGvrX9JEjinmpTaplJQ6hxy15L2
ys4k40nafVWcnRUyAmOn2X9P0nb2Of7Bj3aBh4Oj6DAF6vcWpEFKYKNwmDVA
+2XKQ34o7f8A3hg8kg==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$18291#1"]& ]}}, {}}}, {
    PlotRange -> All, ImageSize -> Large, PlotTheme -> "Classic", AxesLabel -> {
       FormBox["\"r\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(\[Phi]\[Phi]\\)]\\)\"", 
        TraditionalForm]}, LabelStyle -> Directive[
       GrayLevel[0]], DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0.030000000000000065`, 2.8200412041452164`*^6}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.03, 2.8200412041452103`*^6}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.03, 0.04}, {2.8200412041452103`*^6, 
      3.1533745234534373`*^6}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Sigma]\\), \\(c\\)], \
\\(\[Phi]\[Phi]\\)]\\)\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Sigma]\\), \\(^\\)], \
\\(\[Phi]\[Phi]\\)]\\), T = \\!\\(\\*SuperscriptBox[\\(t\\), \
\\(*\\)]\\)/10\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], PointSize -> Small], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], PointSize -> Small], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"PointSize", "\[Rule]", "Small"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Sigma]\\), \\(^\\)], \
\\(\[Phi]\[Phi]\\)]\\), T = \\!\\(\\*SuperscriptBox[\\(t\\), \
\\(*\\)]\\)/2\""}, "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], PointSize -> Small], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.5, 0, 0.5], PointSize -> Small], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.5, 0, 0.5]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"PointSize", "\[Rule]", "Small"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Sigma]\\), \\(^\\)], \
\\(\[Phi]\[Phi]\\)]\\), T = \\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], PointSize -> Small], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], PointSize -> Small], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"PointSize", "\[Rule]", "Small"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Sigma]\\), \\(e\\)], \
\\(\[Phi]\[Phi]\\)]\\)\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.859885725283864*^9, 3.859885886724062*^9, {3.8598860579912615`*^9, 
   3.859886073727132*^9}, {3.8598866482429805`*^9, 3.859886703525756*^9}, {
   3.859886742967054*^9, 3.859886775840423*^9}, 3.859889249823985*^9, {
   3.8598892865742455`*^9, 3.859889350663194*^9}, {3.8598893856976166`*^9, 
   3.8598893936195765`*^9}, 3.859889458814068*^9, {3.859889501501498*^9, 
   3.8598895963491726`*^9}},
 CellLabel->
  "Out[146]=",ExpressionUUID->"320306a7-c894-4cf3-8ce5-908e92d05a06"],

Cell[BoxData["\<\"s3.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.859885725283864*^9, 3.859885886724062*^9, {3.8598860579912615`*^9, 
   3.859886073727132*^9}, {3.8598866482429805`*^9, 3.859886703525756*^9}, {
   3.859886742967054*^9, 3.859886775840423*^9}, 3.859889249823985*^9, {
   3.8598892865742455`*^9, 3.859889350663194*^9}, {3.8598893856976166`*^9, 
   3.8598893936195765`*^9}, 3.859889458814068*^9, {3.859889501501498*^9, 
   3.859889596700082*^9}},
 CellLabel->
  "Out[147]=",ExpressionUUID->"53d14eea-13a9-40c1-814b-f8ee15829c16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"gifRR", "=", 
    RowBox[{"Animate", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"sigmaRRPlot", ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{"numTableRR", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "sigmaRRPlotUpr"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"M", "-", "1"}], ",", "1"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<SigmaRR.gif\>\"", ",", "gif"}], "]"}], "*)"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"plot200RR", " ", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"numTableRR", "[", 
        RowBox[{"[", "2080", "]"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", " ", 
          RowBox[{"PointSize", "->", "Small"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[OverscriptBox[\(\[Sigma]\), \(^\)], \(rr\
\)]\), T = \!\(\*SuperscriptBox[\(t\), \(*\)]\)\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plot1RR", "=", " ", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"numTableRR", "[", 
        RowBox[{"[", "500", "]"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", " ", 
          RowBox[{"PointSize", "->", "Small"}]}], "}"}]}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<\!\(\*SubscriptBox[OverscriptBox[\(\[Sigma]\), \(^\)], \(rr\
\)]\), T = \!\(\*SuperscriptBox[\(t\), \(*\)]\)/4\>\"", "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"s4", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
     "plot200RR", ",", "sigmaRRPlotUpr", ",", "plot1RR", ",", "sigmaRRPlot", 
      ",", 
      RowBox[{"ImageSize", "->", "Large"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<r\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(\[Sigma]\), \(rr\)]\)\>\""}], "}"}]}], ",", 
      RowBox[{"LabelStyle", "->", 
       RowBox[{"Directive", "[", "Black", "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<s4.pdf\>\"", ",", "s4"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8569732864052153`*^9, 3.856973288628919*^9}, {
   3.8573576169055805`*^9, 3.857357617151577*^9}, {3.857358158979666*^9, 
   3.857358161600335*^9}, {3.8573585365488443`*^9, 3.8573585594008474`*^9}, {
   3.8573587898403625`*^9, 3.857358790822363*^9}, {3.857580400741953*^9, 
   3.857580403426953*^9}, {3.857580772031559*^9, 3.857580774356378*^9}, {
   3.8575808687137136`*^9, 3.8575808735596876`*^9}, {3.8575809765750237`*^9, 
   3.8575809798840246`*^9}, {3.8575812073184347`*^9, 3.857581213887435*^9}, {
   3.8577526067868557`*^9, 3.857752607782409*^9}, {3.8577528692579865`*^9, 
   3.8577528722264442`*^9}, {3.8577530335406027`*^9, 
   3.8577530371676006`*^9}, {3.8577533994433537`*^9, 
   3.8577534003033504`*^9}, {3.8581807192331495`*^9, 
   3.8581807987468543`*^9}, {3.858181880946854*^9, 3.8581819328067565`*^9}, {
   3.8582687272827005`*^9, 3.858268743052701*^9}, {3.858268810708468*^9, 
   3.8582688194614677`*^9}, {3.858268991953721*^9, 3.8582690163007207`*^9}, {
   3.858269069560721*^9, 3.8582692159237185`*^9}, {3.8582692702802863`*^9, 
   3.8582692792072845`*^9}, {3.858269346509837*^9, 3.8582694037864237`*^9}, {
   3.8582694384479403`*^9, 3.8582695114409404`*^9}, {3.8584985859484816`*^9, 
   3.8584986130714855`*^9}, {3.8584986678394833`*^9, 
   3.8584986875124826`*^9}, {3.8584988350591354`*^9, 3.858498836667132*^9}, {
   3.8584988967698183`*^9, 3.8584989064548206`*^9}, 3.858964015635604*^9, {
   3.8589640834325905`*^9, 3.858964107812523*^9}, {3.85896505530881*^9, 
   3.8589650577411003`*^9}, {3.8589997747019033`*^9, 3.858999808491005*^9}, {
   3.8589999218300056`*^9, 3.8589999573840046`*^9}, {3.859002411134925*^9, 
   3.859002421409223*^9}, {3.8590032078153768`*^9, 3.859003217804944*^9}, {
   3.859887958940652*^9, 3.859887960848987*^9}, {3.859888752391056*^9, 
   3.859888752602386*^9}, {3.8598887873862276`*^9, 3.8598887935625424`*^9}, {
   3.8598888513116055`*^9, 3.859888930982246*^9}, {3.859889769367982*^9, 
   3.8598897936691113`*^9}, {3.8598898355572586`*^9, 
   3.8598898617799635`*^9}, {3.859889906795685*^9, 3.8598899294566107`*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"c45b1333-406d-4483-ac70-3ac4053cd623"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], PointSize -> Small], 
         PointBox[CompressedData["
1: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
          
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]], 
          LineBox[CompressedData["
1:eJwVzntUjHkYB/AJs4lFpNRQpvuY6kUhl2N/tZVUQxcluUSpk6TZpnvSjXRv
orIzzJjed2ZikKSbLo5+Pyd2tsvosqI5lchuCpNVJpvbvvPHc57zOd/vc85j
GvqbX/g8CoWyhxzN3lL905RvkwiYjet9yMjGUOk7Z7S2WQSuUL1CBzMxpGKm
lb0nXSAaNnZIw9C169OO+a0ioCxUx4wnYMiAGM2ED0QgHafn7IvAkLqsZcX6
RyJw84gkfJsnhhpS2Ft+7hOBReML2nfoYmiT20Da47ci0Ddzfr/RVTv04CZc
UmJeAQqOGkW6X7dFcz9OuFYGVoBJ31R4+LENOv+aP9lQUAF+/bu4Y7mKiYS8
sYu0hxVgQKVdorOQicK3v3vR9YnsW1gh7uZ1aPhpLm/CAAcwWh04GcBAG/YP
qyPtcVDVm2jYlm6NDikurlvOwoGYo9M+1GyFum/3H34VgQOlz7EJ9htLtOp8
/HFlFg66snp0pAxLpGMxSHgLcECbCO+kxlggZ2bnqKoRBxscDLHoW+bIj7Fm
ur4HB8yMkbDjs2boRvEctfIdDrA8es+goxmStQh9ViwkQA5L1ReaYYoyXlxl
XzMlwJyN0iNxgI6EUbbFYTsJoLQ5lsA1o6PSKaMMj0AC0IfyKwO/mCCFspxz
II4Au+mC1UlCY1Rb3C94zSUA5YJdXJDnGsTeyrnMkxHggILQPr1yNeJ4Cnnx
7QTgp2/yje4wQix/q8jkEQK8oZ5k1gkM0RPL+Nj/Zgng1HaxbixpFeIHe5+R
6omBTwvX4aGTAdpekh+UaCcGQy5VKRHm+sjM2tcx1kMM+J5Wn2On9VBtzhDr
bZgYXOh3z2UpViDayOPNheliUO6hF5SAliO58Je1AVfEQN47PNUt1kXe+/SH
3OrFgOHOrz7puAyl997pqesm71nri/t2LEHTjc8eeU2IQdP32/pLTRYj5/Jg
7qL5EvA8zsdj2FYHPX0eGzhtIgEfroep79G0kbP+P9PztklA8p6isW4HKgow
MpaX+EkAJeqF6tWR+ehO9kvhLrYEjNoVz/qf0EKvxhe4WeSR+YXGskTHH/BQ
bcN7G6kE0LUvnbAP+QLPuDIVNW0SUONfpq6umoUJim9ZhwclwMmI+r3VbQbW
twVvsf8kAbo7XXgM6QfYJTN5gC2TAqcKjteAYBIWBYnTZAwpoCw96z217jUs
5dTtZLmSpg6E8rhKyMky7zUIJq1lXPdV0QlFMvVcvsaFL6OeB3fCrid/WnzT
ODqltFXVAa1MYpLHjkpB5slzVvylHVDZcn9tTQjpa5WBN/fKoetMANsjnOw3
FHjZ97RDg4i8xWdOkU5r6uXdbYUu3EObpzT+68d6Rn8LjGnAjoZGk2Y6Ov0x
0ww75z+t3c0mfXk3Z+PWJpiJmx7UjyE9iv5taKuHE4Mtsuo40nvhpa/iW9BA
i9tnGk+63uvgx/Eb0JUR8rVcY4wdRLWTQVGitk9qAmnbDd/O3pNCPz3/Wfck
TT/VslkggBnbrU1bNS6ykSdZ82FVyJwnlkxad7Yxpq4catfgopUppA0fyc34
hXDTszh5rsY++Rtj72bD0O+7Ps5pjNP0Tv2eCkssaWvYpzX/HqA1X4qC91nv
3V5qTKF8jhwpaPsfP9FgkA==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$24665#1"]& ]}}, {}}, {{}, {{{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0], PointSize -> Small], 
         PointBox[CompressedData["
1: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
edz/AMbFZzQ=
          "]]}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwVzHs01HkcxnHdQ7NCRu7GJbcarXLJrj47pzGlpjMlrZJVROgyOxiiXPck
UeNSnaYyzfVXpt0YFCuV+X5TYmOIJhEhtm3kUimVJTv7x3Pe5/XPQ4n4NTBq
ro6Ozlbt/q9X2cLx7TVCGOqr+JBxgorPjtCwzW0hdLg7TcRnUfGYa9q5Ua1v
Dv1hciCdiq+VTHjn3hGC93QXYiZTMVnSn4nqhJB/4KTC4jAVT56rNXJ/KIQ0
PdKIcgcVV6WwvZa0C4F1iv6EYk/Fa/2fpTW8FYKGV9G4+f4qXPc7IhXYi4DG
mym2/LAST83G0K8Gi+BF61+MN9+vxNlDF4er8kTQtk7gffyoGxbwB4vM74vA
eOmfRJLCFUf5jvQ1fxLBmi+h89STLrhXncPXkMXgyWDOjqx2wat/7p2M9RBD
irolu5njjPeoilwMmWKw2j0bkKZ0wi2lHaGvosVgxOm9vmGOEzbN5u7vzhKD
0KMqvXD7Cqzr0CVhFYshYcl9K4MSR0xzfdw/Vi2GwfrIyK/jDjjQ2XLiVpsY
mgJVaW8YDvg6b2rB1RExxD90qckrssfyWsE2o8USwHruj/cN2OGMvivsaxQJ
1CcdtKhbb4cFh1byIv0k8NRHqGtbSMFnx80yAoIlcGHb5buNY7ZY1X0+bleC
BIpyn6fU0GxxJa+jeChfAupMSrbNGhvM9om7xJdLwJZPMuJOW+G4zQI+94EE
DPP4qWNllpgZtCI2+aX2/5vpF/4xC9zqyI3/+lkClw4y4u1Y5vhiGCuVMJZC
T+cu+3CSGfYtyN2dtEoK7ZN9EbODptjOabt3fIAUrvQ69z0iyLjyZA/zbaQU
Du9zD0lmm2Dzlw2ep9OlYJhS+lsdaxluFKy32XlZCgM50eHVFsaYtcOkx/+W
FN5/la/v+WaI058o2m62SMHmp7Js8+GleKK68+EWjRTqK3ozjbMMMO18WL7e
PBkQT6PEr0JIWP08PnjCWgb0IN3o1/r6mGbyemLuOhlUvPA1MNcsxjvNrBoL
AmVgtDxxVqFeiBUnBgQMtgxi+rtpsZfn41f/zPd3OCWD0H/7STp5c/GeyqpR
N0IGqk1EQ0agDk6lu6rKlTIofUZZ+HfQNEpUzWSFdsmg7MdNA++Cv6BbyjAv
j08ySFrl+OzCdx9Rs9y6jmpAgErhjAxM36Ezu6VpcmcC9GObIvOPvkFn4276
MekEkK0jYs649aO4LPsn5DACTnMXsHRn2pBQPjmVq7Wez43Yhpo21Nza5DCj
9XdBmYtOctvQCmtO8uBeAhL9PC6aPW9F3bV3bcrDCXhf0K7hVLcg+sed7IAo
AkSj/RuXcpsQOfqUfuphAhJq/PoMJhDakL/Hc1zrtcsvbHU9hBCniro34ggB
u9bVxp1rUKLH89SVm9gE/HCcrOdecg9liikhJhwCHOIPdfbG3Eaarlp5WYLW
w7xws7FyRJ6T307hElDk+cDtxT0FojuHT5/XWilISOSLSpEwadG244kEPHrk
V7Jl/3UUaBz0eeNRAijFA/ulb8Uow9eJckdrj2xGTEfxFXQjfGozNZkAiw1e
Nbn7LqFF5WLhshQCBPWkX44MF6K1nQmNOVrjMmGI595cFPGN8WFK6/lWERv7
NJmowNHckn2MgHs5WZ/LNRx0lznqP6C1jzuvJi+lUPkfZFFu6A==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$24533#1"]& ]}}, {}}}, {
    ImageSize -> Large, PlotTheme -> "Classic", AxesLabel -> {
       FormBox["\"r\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Sigma]\\), \\(rr\\)]\\)\"", 
        TraditionalForm]}, LabelStyle -> Directive[
       GrayLevel[0]], DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.029807083333333567`, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.029807083333333567`, 
       0.039995000000002626`}, {-1.007080971819*^6, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Sigma]\\), \\(^\\)], \
\\(rr\\)]\\), T = \\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], PointSize -> Small], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], PointSize -> Small], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"PointSize", "\[Rule]", "Small"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Sigma]\\), \\(e\\)], \
\\(rr\\)]\\)\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Sigma]\\), \\(^\\)], \
\\(rr\\)]\\), T = \\!\\(\\*SuperscriptBox[\\(t\\), \\(*\\)]\\)/4\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], PointSize -> Small], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], PointSize -> Small], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), 
          InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.5, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"PointSize", "\[Rule]", "Small"}]}], "]"}], "}"}],
                ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[SuperscriptBox[\\(\[Sigma]\\), \\(c\\)], \
\\(rr\\)]\\)\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8589997943900046`*^9, 3.8589998090460043`*^9}, {
   3.858999933457003*^9, 3.858999957850003*^9}, 3.8590000354540462`*^9, {
   3.8590023978004675`*^9, 3.859002422019085*^9}, {3.8590031974393744`*^9, 
   3.8590032186409426`*^9}, 3.859003414743532*^9, 3.859003628615119*^9, 
   3.8598879614998074`*^9, {3.859888848872698*^9, 3.8598889313926115`*^9}, {
   3.8598898493737597`*^9, 3.859889862301921*^9}, {3.8598899093873606`*^9, 
   3.8598899300749283`*^9}},
 CellLabel->
  "Out[197]=",ExpressionUUID->"0ec3e5a7-9ac8-4759-9d72-06558cd76c6f"],

Cell[BoxData["\<\"s4.pdf\"\>"], "Output",
 CellChangeTimes->{{3.8589997943900046`*^9, 3.8589998090460043`*^9}, {
   3.858999933457003*^9, 3.858999957850003*^9}, 3.8590000354540462`*^9, {
   3.8590023978004675`*^9, 3.859002422019085*^9}, {3.8590031974393744`*^9, 
   3.8590032186409426`*^9}, 3.859003414743532*^9, 3.859003628615119*^9, 
   3.8598879614998074`*^9, {3.859888848872698*^9, 3.8598889313926115`*^9}, {
   3.8598898493737597`*^9, 3.859889862301921*^9}, {3.8598899093873606`*^9, 
   3.859889930365979*^9}},
 CellLabel->
  "Out[198]=",ExpressionUUID->"5f6a0b31-9b9d-45dd-849b-db7797f57061"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"errorLFF", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<sigmaFFPolsLError.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"l", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"errorLFF", ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Classic\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<T\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Delta]\[Sigma]\), \
\(\[Phi]\[Phi]\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "->", 
     RowBox[{"Directive", "[", "Black", "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8589642025112596`*^9, 3.8589645111987877`*^9}, {
   3.858964578551463*^9, 3.8589647436135745`*^9}, {3.8589647912957306`*^9, 
   3.8589650067138205`*^9}, {3.858966199556531*^9, 3.8589663504877253`*^9}, {
   3.858968327837488*^9, 3.8589683281394863`*^9}, {3.858968386096024*^9, 
   3.858968426366026*^9}, {3.8589684891218576`*^9, 3.858968490397857*^9}, {
   3.859001143853751*^9, 3.8590011659698343`*^9}, 3.8590016420131764`*^9, {
   3.8598883038798027`*^9, 3.8598883041518517`*^9}, {3.85988835155937*^9, 
   3.859888378099684*^9}, {3.8598885708444395`*^9, 3.859888577014738*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"e5b12eaa-a808-475f-8e2a-3af4dd0745d4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[1, 0, 0], AbsoluteThickness[1], PointBox[CompressedData["
1:eJxV3XVcFc0awPFjt6JiFyJiJ7YirK2gSIpId3Ma22N3J3Z3YLdiYWEndnc3
5oX9Pe8f9/5zP9+7M7OzM888M7uH973VQ5M8InJrNJrjhTSanP/+7z+R2f/x
mfvIWcWEY+p/N57wn684O2T/p/QQsdtd1Xm0/11/7HwuIyPjdyi2xL/gf/f5
r/xb9XrR7jit/EfnnPvZt/uv/mfn+SkpKd0bYedfX9XrZtv/2vuh1t9YRurf
/an6TcH/2v+jlm/x+yH10/6p1ye9fyj3y6XktP/yEQ52z63k9N/z+kO5fx4l
p376abz0aF5FbeegtPcrH9dT8QOHAqp9Vj6U/hVUy3+Yi21WFVLbnzlR7n+3
MO0Nk/uXLarW/6aX+7sVU70rUu4/trha3uL33/OUoL+9sHawlXq9cYf/nq+k
Wr9sC2y1s6RaPk/d/563lKLOTxWc+raUWl9T6r/nL62OT6H8uLe9tXrd5ucD
GQ9rtX67d/hDYBm1/bBHD2R88MzreNrcsmr5jDMPZLzKqe1ZHcaNL5ZT79d3
+wMZv/Jq+Y1r8MWCFVQXXfhAxrOC2r5hGtYqFdX2Hox6IONbkfYGYKuBlVRn
JjyQ8a5Mf0Nx6rbKjL/PAxn/Kmp701xw79dV1PIOzvL8Y6tyv2by/DWqqfXn
1JHnT6vG/FTF3RraqPevUFr6Oxi/LIDnnbFhfrPuy/xVJz4e4xeR1dX2Sp+7
L/OJP+/CrfLYqvd/tvS+zK+tOl5vJuBxS2yZX9N9mW/K2wfhm21rMF7d78v8
11DLL3XAtW/W4H5V7ks82FG+IO5vtFOvX/l0T+JDrt/Fp6xqUv/kPYmXmur1
lG24/Cauey66J/HD9QrjcHR3e55Hj6fNtWc+A/Cep1zP6IYfONSiPw644Iha
1K+KG1/keunC2LdqbfW669e7qi3xeNIDvHZfbcb3LL5YsA7ld+MfPnXU8Upb
jm1WYecpuNvnOvRnANYqddX+D4jA86bWVdur747T7uI37fCLevXU8ntrY6uB
OMUatzpVT+3fGA0OLlsfv7nD/IfXZz3exKnb6rO+juObmgb0LxVr3Bqw3hbh
2ou47jke937dQG1/tQn3b92Q8qF46diGxHMvnHYNa9riLzUa0Z9a2FrfiOe3
xt3SGjG/GtysQGPKv72tulPDxmp7wbdwoDfXHU7ixMGNiZ8deNyKxvRvGZ53
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
slQv4qUwflezF/3JOq3a3LoX8/0c5+nZi+e/jicG48gTuLxR6u/AS8fSfoUV
uPYCrmtm4J2bpX0LdjwqTsJnrkn5IOzxshf974Vv/aa8gyOOsnKjP/Xx+xpu
PF8lPLglziyM87pQ3v7nKdWTAt0Yr5e4gp7rz27iZaOp3/cUbpgi7e3GuzbK
9TW4fZobzzMHn73ixnyNwZ7P3SR/4gc/5X4RuFmB3oy3N/5h1Zt82lm15VDF
3ox3czzCjvL2NSnfvWFvxqsMLtaK8pp8+JIi/npSrT/XRco/xf28pb1rqjW2
QXK/E/hZtPRnJ16vl/6uor52MH42GzcbQ3mHMZT/NZX7TTLjwylSPhKPXMF1
1z7U774JZ3TFxXbL9VaUv5om12vjeWdoL7IC9r8qz1uY+rb36M/2n+mqnz2X
8q9VZ7/fyfPfwbpf0r8M3Dyfu5z3qf+ruLvs//hwea5bllB+jK27/N6Ce9QX
D8fFW4j11L/qJPXD8Lzu0r4X5YM85f6dcY0A6n9ugZ9HutP/2tTfpHWX8cC6
gZTfXpjyrUa5y/50QvXvyVL+LU6b6y75XLVlzDLu73wR99gg/TlC+ZI75fp2
fO0Q/c9ciVNOyfPOoX7QZXf5vQLXuCPtDaD8q6dSPg5vfo8dArA+i/IaN+q3
yuPB/Zzx76IePG9Tyh8ry/UUOzzWxoN4LItd6now/gWpX7KZXP95XPU1R/Eb
1ZqFXT2I/3s42J3rGRexXT/u//ko9V+FU95+J96c6CH5g/Km/tJeCm49QupP
xH8m0j/nodQ/NlvKa/HYJdy/aBjle62T5/HGpbZjTTd8/YBcb0P9helSvwEO
vijtV6N8rVty/1L49WOuP8uLt7yV8f2u/u5tMX2X53uFW+fyZL7v8ru4pogn
9S/g49aezNdRPK4q5VN2Ur9XbU/6uxaXakr9yAWUz2wrnoIXdfZUvtX2nxo6
HIe4eSoee6qOjjNSv1ZfT6XwjRXaIVH4dainUm30a/d5fpTfFu+pWG/u+nBf
T2w2eyoPB1pvfu6M21i4XrEZ9TUTqO9bCx+fSfuLKlJ+4iLu/7oYdltD/zrk
wqW3eiqDshtc9uWoWj9zn6fiP/Xo14Iv8KLjtN//tmpN+HlPxTH7Bh/O49o3
sfYofvOQ8cvaSf1tr7n/xHXY/NVTeeO+p2rNRZR3/Mf4pU/DuQp50d4ofKKU
l9pf2/7Un1jZS32+u3HYzd6L74NBlC/b2Ivx9sS3Wnsp2d3f074rXtzRi3ho
S/3wnl5K9uPW/t0Q1+7jxXjbUv59sJc63rfK4u2xXspKbXYPC+Nko1z/e0St
7zjUi/j6hHON435Zz1RrTk33UrKLD7S+jSct8FLHt9UF3HuVl6LLbj7sGPXL
buF+c3fjW3u8lJzpvLSB8suOSntLcUQG4xE8C9e5Tvmt46j//r4X620I3v7S
S+mWXT1RR/mBn+nPzQjc/o+Xkj3cjj38cO4C3up8HO1F/VNW3mp/O3bEkyp6
k49aUt7Tzludr4D6uFxDb7W/X2zw7ZZ4VhnqL1O81fFsUxhHuHir93/1N00t
X9/bm/n+jD8ESvsv8I5o+md7V7VloN5bOfa1tv/7S7j9YPp7LJ3y+cZ4q/Gx
eD8+PZX6I1Lx5BSeJ34V9T1XUD5wPi63yVudnz5TKX9vlzfrcRRenkZ/gwfg
yDPejHci9etf9VbXw+gw/OEu91/uS/ndz73VeDzZEw/66E1+7oCdfnmT31tR
P18+H3U9hzTAp4v70J4t5aeV9yEflMNetj6MdzFcvr6PGi/Tc1P/XnPae/j+
sOrlTtTfcEu1JqY77Y84gRt4+qj5IzoVf/T3YbwWUH93pPRvDB6k9WG96yjf
YaCPOl9T/XH+UfRvX1d8ZrKPUifnBk2pP22ujzr/jlWx1zLpfyHKV9og5b8c
Un1/hw/5+gFecchHjYfHZ1VbYk5Jf3bjBpd91PgrvILyX277sF9MwXueSnsD
8eD3PH/tSOp3yPJR4+GHO86fpw/5w5Hy54r2kfdfPL1sH7X8njLY26aP+nwH
c1G/Ut0+6vhceHtQ9X2HPuTjTNWa1Y591HxWOR3HduV+fbbhhu59iPfF1P/i
J/Un4D3hfdTxc0+m/LBE6V8Y7tif/jj2xgVG9FHj90Q76p+b2If9tw6ePruP
On8/y1Ded0kfdXzW5saV1/Vh/N4fUP1gWx91fTS8o9qy+kAfNb5yn8ax6X2Y
r52Ub3KR/l5ajr9myvhMpfz+xzLeg/Gwt9z/RQzu+L0P89uH+oVz+ZKPO+Hz
hX2JhyaUn2XN9T1VsW9VX+oXxZVr+xL/WfvV+o+b+Kr57eozvKatL+8TV1Vb
Ejr70t8juImbL+tjC/7q66uO95+F1D8Q6qs+/4oJ2BLvy3j3p3wXM64QiQtb
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
QCfceV4C8doU11qUQL6xw4WWS/vl8OvV0v/C+NyGBKVX9nS3/jNC9ZZUuf8H
PH2ntP8YG/ZJ/69j78Ny/TRueVzqH8AVTiewfreothQ4n0B+XY5fXpZ4mo3P
3khQvHISyDi86U6CMiAngAbjqQ8TFFPODZOw7lkC5/1Q7Pk6Qemds2B8cPMP
Ccol2+yE2x2X+5rAftIOZ2VJPDbGt/8mkD/s8ME8ieS7cnhJwUT2syJ4eLFE
ZU52enz+d7jqsFKJnB8+4c7lEpmvZ7hW5UTi8xYuVD2R8+g5/LpmIvnlCD5X
N5H9fyfe0ihRyZmuHevw9GaJSl71htjQOpH3lenYu30i+WI0btkxUcmZ/qcD
VGvsuyUyn4m4YM9E4iEUv3JPJF/64AyfRPJpD7y5XyL7txOeFpzIec0B6yMS
lZzt7kAt7BUrz18Zt0iS8bXC5Y2JvF/lwz/7J/K+m2VRfWdIIvH0Dh8akah0
yZnAR3jp2ET2+xt4xKREJad79TJw+HR5/jTcZU4i55eduPaCROJhPS68NJH8
tAS/WZnI+9MsfH5dIvE+HqduTiT+huIZ28UGbNwjzxeNfQ4msl8HqLZ0OprI
ecsD259M5DzVFRfMSOT83Q6/uijx0gRnXJP2a+HNtxJ5P6uMp91PVHJeFw6V
xPoniZz/CmCvl4ms56xhqlu8S+S89xiX/5zIfnge//yeyHrai+/8TiQ/r8KH
ciXJ+REvzZ+k5Azn5EF4RJEk5iMSh1sl8T3EA3cpk8T+5IhrV0wif9XBhasl
sV7L4Dc1kog3DT5fO0npkdOhN0NVpzZI4n3zJp7RVO53HBtbilNVa8LaJXFe
W4g7K0nyfQzX6pLE+jLiQi5JPH8Ifu2WRDz1xOe8ksgXrfGWvknMrz2eHijP
UxobwpI4X/4boto7WvrzBrdMSOL8kokr6JOYz3T8y5zEfG7Hdwclyb8fBR+2
JHH+m4yXjU5i/Q7EIyckcf6MwhFTZb68cNdZSUr2brOscwdcJyWJ/aoRLrI4
if23Cn67PIl4LYwvrEnifPNjsOqtG5N4P3qGZ25NYv+9qtoyfFeSkpPt3h/B
YfuT+H6yBXdOS+L8sQjXOpHE+/0kXOhMEt/LBuLX55M4T0fjc1eSyK8+eMvN
JNZvZzz9bhLfAx2w4VES+5Mt9n6eJPkMt3yTxPn83yDVFT4mke/f4l9fk9jv
7uC7P5OUnO172Vl8+J/E2z7Vab1za5XqOQtwHT6SV0t+nIebFtByPh6LVxTS
Kjmvt1lmbF1Uy/hG4tHFtbx/e+NvVlryeWccVVrL/tkM3yyjVXKWc1E71Zre
5bXkz9L4SEUt58c8uGkVLfno80DVK6ppyR+PsLWtlvPyZTzaTst6Ooq/2cv1
bTiqjlb5kr2cXi7HN+tpmZ+ZuHtDLe/nI/G+xvJ8BlzPQUu+CsMLm2uZfy9c
rJW03wkPbaNl/TbH79tpWV/2ONhJ+lcWX1K0rJcCuEMnLev1xwDV27to+d72
Ett115Ifb+HZLnL9LM7fS0t+OICTe8vzbMIvPLSsp8WqnYO8tXzfmIYv9tES
r8Ox4qdVEnJewPR4m7+W/T0c1wjS8j7sg2eFaJUL2ctrVVecL1zmtzU2R2rZ
/+rh59HSfmXsGyf9K45PJ2g5X2twG62W/ftTf9Ub9BIfT3Blk8zvDTw5Web3
NP47QMZ7P04arCU/bMIPhmrJZ0ux+3C53wx8dKSW/WQ0dhijld9n8cpxWt5f
YnGZiVr20wA8ZrKW95/e+PtU6W9H1ZbEGTKeLfD9WbK+6uDec7Xkt8r4SIqW
fFwCN12oZb/KjVcs1pIfviartl4m4/0Cj16hZf+6g7+t0nJ+vICj1mrJR8fw
zfUyHrtw901avieux/u2aMmXi3G9bVry63S8cIeWfD8aF9ut5fw7AA/dq2W/
T8Dv90v+CsHBh+R5vPGlNOlvd9zhmKxXR7z9hJbzaVNsd0rL/m6PZ5+R9VsR
5z+n5X2jhOq0IRe0fO/Lg99dkvX1w6w66KqW/fItvnhdy3npIVYyJR9ex9tu
SzyexTXuaTnPpeFZDyT/7cT5Hmt5X12PzU+1nIeX4OfPteyns7DvKy3v8+Px
6Tda3neG4jbvtewnBrzho6zPGFz5i5b9JRBP/qaV38/x3x+yX3THSb9kPTjh
B3+0vB80x+4aHd/D6uKjuXWMvw12yKfjfacsXllAx/MUxWUK65i/3Ko1k4vq
6M8Pk+q/xXXE7zucVFJHfnqCH5TWsd/dwu5ldZxHLuKj5XXy/6eEHSrpiLeD
eGUVHet7By5jo+N9YT0eY6vj/LUMf7fTEZ9zcXQtHfl6Cs6so2M9j8Y96usY
z0F4f0Md53U9rt9Ep+Q0PzwGL3LQsd6CcfEWOua7Dx7WSsa3F/7QRkc+7oxD
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
4F3Jt+zPaQPuS77sil89lPFhf0/r90TyYw+c8UzyhSv5q9NLiR/OC5qdrw2c
p3th+3eSz3rjuR8MvO9w/tAU/Gzg+wXnE82Ar/L8XvjVd1mPPrjfTwP7Iecd
TcZviSfOQxrHfwb2Pz+8OZeR7xn+uFpeI/kyEE/Lb+R9k/OXJlchI/3hfKbR
FzHSXih+XMzIegvHXlZG+T0JnyhlZPyjcIsyRs67MXhNOWk/DpevaOR9j/Ol
ZnxlI+spEf+sauR7qxbHVZf76fGdGkbOX5xnnT3tjfxebMLHaxvl/z8cN69n
ZLw4HzuvbmAk/w7C5RobOZ8MweOaGtlv5byd1Uz6Z8GxLY3E3wh8u7WMt5zf
XdsZ+b4s5/uD7Y3M5zjcUJHnmYCXdDSyv8n7glUXI/vRFDy8m5H4m4Y/9TCy
H8j7R1hPI+edWfiqm4zPHNzZQ67L+8wuL6k/H9fqY2S9LcTz+hr5ez55Pyrk
b+R7xFI8MNDI/rgcvw42kj9537KEhhlZ76vxlQgj37vW4k7RRtYj72+WnbFG
zrcbsX2CkfXA+55lbpLEYyouqDeSn7fjAUYj630nfmU2yv9/Ae43QOJxL84Y
ZGT/4n3U4jjUyHnnEN5sMZJf03C1kUbOW7zfWqaNlvk/jnONM3I+5X3Yop9g
5O8teV+2PJ5k5PvhWew11cj3Sd6vLSemG+X7FW4xS+5/Ga+ZI+uB93VL+RQj
+/N1PH6BjEcm/rnIyH57m/ylW2rkPHEXP1ou8cT3gjTPVRKvj/DxNdI+3xfS
mq83cr57jldvNJL/XuJyW4ycJ17jcVuNnN/e4aztRvIp3zfSYncZOY9+xrf3
GDmvfsWu+2U8vuODB438nvcTN0wz8nsx31fSlhyV9fwPW50w8v0nF9+Php+U
9ZQXfzot+Sw/DsuQ/vB9J+3qeSPft4rgzpdkvRTHu64Y5d8vhGtdN/L+WRrP
uyn1y+BCt2V9lef70PC7cv+K+NN9iZcqOOyR8f++X119YuQ8YIs7P5fnl+9d
u14a+R5bC9d6I/NRB897J+uvPi70UfrbCA/8bOT80gS//ir3a4b9f8h6bIHP
/ZT4ao3b/5H80g5v+Wfk+1p7bJPbxPlRwdPzmuhfR5y7gIn3yS7YUMjE+aE7
flLExPcEF+xd3MTz9MLpVibGzx23LG1iP/DEa8tIeR9cobyJeOb7pvO0itJ+
P5yrionzG99DnfXVTPLvH8CPq0v/w7CXnYn5jMQn7E2cJ/je6tyijonzUTxe
U8/EeZ3vs87lG5r4/UKHxzc2sR8Y8c+mJvmeg+Oam8gffP91vtPSxHljMO7Z
RsZjGD7UzsT34eG4kZOJ+eH7svNSxcT+OBaX7GQi30/AI7qYON9Mwp+7mTg/
8P3aOdzFRH6aga/1lPmejbv0NrF+5uHdHibeD/g+7lzbW55nEd/fl/Qx8f2M
7+kWKz8T+X0FHu4v7fH93fIp0ET+XYvDQkycV/leb7kaJvO5GXeONLFe+L5v
2RUtz7sD14oz8b4mvwfMSzDxPr8XF9Ka+H3kAB6oN8m/Dwy/Npr4/nIU+yeb
OJ+fwOcGSP9P4faDTbwvn8FbhprYn85hm+EyXxfx9JFyvys49xgT+638HmIY
J+OViZ9MMJH/5PcT78kmvu/cx+lTJZ4f4pYzTJL/yV+bZ5nIR89xtbkm3g9e
4WkpJt4f3uJcC+X5P2D9YomHz/jxUhnvb9hrhYn8m4VPrDKxH/P7UVqLtRL/
f/Ga9TIfudTfm9LKbzLxfpcXj98i/S2Af241cd4ojON2yPgVw3d2mXift8I9
95rYr0vjQ/tNvK/xe1hao0MyvhXw0jQT+3VlXPKYrL9qeMQJE/nfFn8+aeL8
WxOHnzHx+1otfC1D4qEu7nJB1m8D1ZpDl0y8fzXGja5KvnPAS6+bOK+2wCUz
Tfy9Rms84rZJ/nlK/Pmuib/n4vdETfgDE98zOuBrj0ycpzvjLk9N7H/d8O7n
JmVtdniPd8G1X8l64/dLTcobE/u7Oy78XvKxFx70UfJfH/zms6x/PxzwzcR+
E4DP/zBxHgvGTr8kf/H7qib1j6yHSFxdY+Z7egyekdvM9XicJ59cT8LGAmbi
l99zNU8LmXn/NGGfonK9P7/fnisu1wfh9iXl+lC8pbS0L78f25SV+4/C08vL
9bE4dyW5PgEbqph5vsn4STUzzy+/V3vbmhmfmTjdzsx5bg5uWcvM+KbgtXXM
xPtCXKG+me9D8vv4hIZm8vly/KuxmfWyCsc7mHnfWYvvNjfz+9wG3KuVmfyw
GR9uY5b/Pxzc2NFMfO3Ay5zM5H/5Pb9UBzP5dR8e2cksv9fiL13MfJ9NwxHd
zZxvj/H78x0XM+ejdNyzl5n1cRof6m1m/WTgRp5m3q/5+wPLUm8z+eYyLulr
5v32Gh7hZ+Z7+k382d9MvrqDw4PM8s+b42shZtb/I9wl3Mzfzz3FuyPN5OcX
uHaMmfPPa5wSZ+Y89g4XTjSTfz7iQVoz719f8Bu9mf3tOw4wSTz9xOeTJV7+
YKeBEg/8fYcldbCZ9ZoHVx9m5nyWH88Ybub3Ef4+xJJnlMxnUWwcYyaflFCd
9nqczFcp7D9R5qsMPjfZLN9LcftpZvJ7Jbxlhln+/SbYZrbMR3U8fa7Mhx3O
Pd/Meas2Niw0y98/4CeLzXwPaYi9l5k5DzbB6SvM5HP+niat5Wozf8/cEq9d
a+b9pg2usEHG2xFP2CTj7Yx/bZHx7ojjt5nJf13w3R2yvrrjXrvN5FdXfHiv
mfdXN9z4gJnzgAdedsjMecwblzpiZj/0xSOPmTlP9OPvf36dkPgPxPGnzOwv
IfjuGTP7Tzjudc7M/hSFD18wc36Iw40vmznPJOJlVyW+dbjUDTO/pxrxyEwz
5+lk/OW2me8JA3HEPTPfc4fg6w/MfD+x4K6PJV+OxHueSj4cg+u8kHw3Hs9/
ZWY/moSLvJV8NRUPfm/mfDADv/1o5n1oNg78IvloHr7wTcZ7AXbOkvFejLf+
kvGWvyez/Wvm/WklnqlJJt+s4e+pCudJJt/w92jOg/Il831yE35TIJm//0nF
AYWT+b7D37M5ny+aTHzvxk4lkonvfTi1ZDLnEf4ezrm6dbL8vSKeUTaZ8+kx
nKdCMt+n0rGxUjLnt9P4aZVkzkMZ2Mcmmfi/gE/aJhP/l3GrmsnsX9fwulrJ
7O83ccW6yZwfb+OJ9ZOZr3v4d8NkzhcPcUKTZPYX/j7Q+Z5DMvvLc+zWIpl8
9AqntUpmf3mLm7RNlu8ReLljMvP5mfxVwTmZ97NveEKHZPJVFv7VKVm+P+D4
rsnsL//w3e7JzDd/72jp5ZrM9998+HCvZN5/CuLG7smsvyJ4mafEQ3FcyieZ
fFcSj/RN5n3MGn/xS5Z/fhpHBEi8VMTXg5Ll90XcNTSZ95vqeE+4xJMdrhOV
zP5VC8+PSWZ98/efliLxEm8N8ODEZPn34+K32mTO8w440JDM96YW+IIpme9V
rbFzf4nXdnjrwGT598Xw96O1hyTzPbIDThkm8dwZFx6RzP7ZDQ8alUw+d8Fv
xsj1XjhgvFx3x+cnynX5+1inKXK9D06dJtf9cPWZcj0Az5gt14NxnnnSvzBs
nC/XI/HThXJd/l7XZ4k8Xzw+uUyePwm3Winjo8frVsv4mXDFdTK+/fHEDTI/
g/DvTTJ/8vfDCanJfP8Zju9tk/kfhd12JpPfx+K03RI/E/j73Vb7JL4m4XUH
JP6m4oqHJT5n4IlHJH5n49/HJL7n4YR0if8F+N4pWR+LsdvZZM4Dy3DauWT+
+YuVuMnFZPLtGrz8cjL5mL+31pS+lsz7zyY86kYy35tTzc7/A3o5Q6Q=
     "]]}, {{}, {}}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"T\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Delta]\[Sigma]\\), \
\\(\[Phi]\[Phi]\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 
    AbsoluteThickness[0.2]],
  BaseStyle->Automatic,
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Directive[
    GrayLevel[0], 
    AbsoluteThickness[0.2]],
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->GrayLevel[0],
  GridLines->{None, None},
  GridLinesStyle->Automatic,
  ImageSize->Large,
  LabelStyle->Directive[
    GrayLevel[0]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 2.5*^7}, {0, 38074.7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic},
  TicksStyle->GrayLevel[0]]], "Output",
 CellChangeTimes->{{3.8589649635686283`*^9, 3.8589649929122925`*^9}, 
   3.8589650672239447`*^9, {3.8589662373481584`*^9, 3.858966251431059*^9}, {
   3.858966282630032*^9, 3.8589663309101486`*^9}, 3.8589670027887917`*^9, 
   3.858968328886486*^9, {3.858968406069024*^9, 3.858968427808024*^9}, 
   3.859001135793454*^9, 3.8590012073770175`*^9, 3.8590016436063137`*^9, 
   3.8590017366521535`*^9, 3.859001821102088*^9, 3.859001912594651*^9, 
   3.8590020308257084`*^9, 3.8590021798569813`*^9, 3.859003237689945*^9, 
   3.859003631497119*^9, 3.8598883061881137`*^9, {3.8598883591155205`*^9, 
   3.8598883790016527`*^9}, {3.859888556656379*^9, 3.8598885793392835`*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"91a28b9a-1f0e-4b71-8a0c-9792263223b7"]
}, Open  ]]
},
WindowSize->{1141.2, 574.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1. Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"07eca4d1-6941-48f2-b375-ba67ac28d540"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4529, 111, 260, "Input",ExpressionUUID->"4d0f280f-57ba-44e2-ab50-dd33da4ee6bd"],
Cell[5112, 135, 458, 12, 32, "Output",ExpressionUUID->"c8dc5ce5-a27c-4e91-8e15-a9a19da48346"],
Cell[5573, 149, 489, 13, 32, "Output",ExpressionUUID->"2845b5a0-dab5-4b8f-9dad-ca84d3d4ceac"]
}, Open  ]],
Cell[6077, 165, 12438, 318, 823, "Input",ExpressionUUID->"84a01d31-c282-4ece-95ab-fc2df2045dda"],
Cell[CellGroupData[{
Cell[18540, 487, 4274, 100, 205, "Input",ExpressionUUID->"9036a5ff-e076-4dfb-8129-5c9bf5b69dec"],
Cell[22817, 589, 83335, 1488, 371, "Output",ExpressionUUID->"320306a7-c894-4cf3-8ce5-908e92d05a06"],
Cell[106155, 2079, 541, 9, 32, "Output",ExpressionUUID->"53d14eea-13a9-40c1-814b-f8ee15829c16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106733, 2093, 4702, 98, 162, "Input",ExpressionUUID->"c45b1333-406d-4483-ac70-3ac4053cd623"],
Cell[111438, 2193, 61341, 1103, 367, "Output",ExpressionUUID->"0ec3e5a7-9ac8-4759-9d72-06558cd76c6f"],
Cell[172782, 3298, 598, 9, 81, "Output",ExpressionUUID->"5f6a0b31-9b9d-45dd-849b-db7797f57061"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173417, 3312, 1440, 29, 68, "Input",ExpressionUUID->"e5b12eaa-a808-475f-8e2a-3af4dd0745d4"],
Cell[174860, 3343, 25654, 443, 383, "Output",ExpressionUUID->"91a28b9a-1f0e-4b71-8a0c-9792263223b7"]
}, Open  ]]
}
]
*)

